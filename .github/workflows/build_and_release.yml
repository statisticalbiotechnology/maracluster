name: Build and release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: preinstall
      run: sudo apt-get install libxml2-utils
    - name: create_dirs
      run: mkdir -p ../my_rel ../my_build
    - name: configure_and_make
      run: ./admin/builders/ubuntu64_build.sh -s `pwd`/.. -r `pwd`/../my_rel -b `pwd`/../my_build -g
# Skip tests for now
#    - name: test
#      run: cd ../my_build/maracluster && sudo make install && make test ARGS="-V"
    - name: Upload packages
      uses: actions/upload-artifact@v1
      with:
        name: ubuntu-packages
        path: ../my_rel

  build-centos:
    runs-on: ubuntu-latest
    container: 'centos:centos7'
    steps:
    - uses: actions/checkout@v2
    - name: preinstall
      run: yum install sudo scl-utils wget
    - name: create_dirs
      run: mkdir -p ../my_rel ../my_build
    - name: configure_and_make
      run: ./admin/builders/centos64_build.sh -s `pwd`/.. -r `pwd`/../my_rel -b `pwd`/../my_build -g
    - name: Upload packages
      uses: actions/upload-artifact@v1
      with:
        name: centos-packages
        path: ../my_rel

  build-fedora:
    runs-on: ubuntu-latest
    container: 'fedora:35'
    steps:
    - uses: actions/checkout@v2
    - name: preinstall
      run: dnf install wget rsync
    - name: create_dirs
      run: mkdir -p ../my_rel ../my_build
    - name: configure_and_make
      run: ./admin/builders/fedora64_build.sh -s `pwd`/.. -r `pwd`/../my_rel -b `pwd`/../my_build -g
    - name: Upload packages
      uses: actions/upload-artifact@v1
      with:
        name: fedora-packages
        path: ../my_rel

  build-tarball:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: preinstall
      run: sudo apt-get install libxml2-utils
    - name: create_dirs
      run: mkdir -p ../my_rel ../my_build
    - name: configure_and_make
      run: ./admin/builders/tarball64_build.sh -s `pwd`/.. -r `pwd`/../my_rel -b `pwd`/../my_build -g
    - name: Upload packages
      uses: actions/upload-artifact@v1
      with:
        name: tarball-packages
        path: ../my_rel

  build-osx:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: create_dirs
      run: mkdir -p ../my_rel ../my_build
    - name: configure_and_make
      run: admin/builders/osx64_build.sh -s `pwd`/.. -r `pwd`/../my_rel -b `pwd`/../my_build -g
    - name: Upload packages
      uses: actions/upload-artifact@v1
      with:
        name: osx-packages
        path: ../my_rel

  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    steps:
    - uses: actions/checkout@v2
    - name: create_dirs
      run: CD .. || MKDIR my_rel my_build
    - name: configure_and_make
      run: |
        CD ..
        SET base_dir=%cd%
        ECHO %base_dir%
        CALL maracluster\admin\builders\nativew64_build.bat -s %base_dir% -r %base_dir%\my_rel -b %base_dir%\my_build -g
    - name: Upload packages
      uses: actions/upload-artifact@v1
      with:
        name: windows-packages
        path: ..\my_rel

  release:
    runs-on: ubuntu-latest
    needs: [build-ubuntu, build-centos, build-fedora, build-tarball, build-osx, build-windows]
    # if: startsWith(github.ref, 'refs/tags/rel-')
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
    - run : |
        ls -R
        mkdir releases
        tar -czvf packages/ubuntu.tar.gz -C ubuntu-packages $(ls ubuntu-packages)
        tar -czvf packages/centos.tar.gz -C centos-packages $(ls centos-packages)
        tar -czvf packages/fedora.tar.gz -C fedora-packages $(ls fedora-packages)
        tar -czvf packages/tarball.tar.gz -C tarball-packages $(ls tarball-packages)
        zip -j -r packages/osx.zip osx-packages/*
        zip -j -r packages/win64.zip windows-packages/*
        rmdir *-packages
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: packages/*
        tag: ${{ github.ref }}
        overwrite: false
        file_glob: true
